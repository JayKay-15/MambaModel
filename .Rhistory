models_tbl <- function(g) {
model_df_viz <- models_df_fmt %>%
filter(Game == as.character(g)) %>%
select(-1)
model_df_viz %>%
gt(groupname_col = "Metric") %>%
# opt_all_caps() %>%
opt_table_font(
font = list(
google_font("Chivo"),
default_fonts()
)
) %>%
tab_header(
title = md("**Raw Model Output**")
) %>%
tab_style(
style = cell_borders(
sides = "bottom", color = "transparent", weight = px(2)
),
locations = cells_body(
columns = everything(),
rows = nrow(model_df_viz)
)
) %>%
tab_options(
table.font.weight = "bold",
table.font.size = 13,
table.border.top.width = px(3),
table.border.top.color = "transparent",
table.border.bottom.color = "transparent",
table.border.bottom.width = px(3),
column_labels.border.top.width = px(3),
column_labels.border.top.color = "transparent",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
column_labels.font.weight = "bold",
column_labels.background.color = "black",
column_labels.font.size = 14,
data_row.padding = px(3),
row_group.padding = px(3),
row_group.background.color = "#e3e2e1",
row_group.font.size = 13,
source_notes.font.size = 8
) %>%
cols_label(
Team = ""
) %>%
cols_align(
align = "center",
columns = 3:11
) %>%
fmt_percent(
columns = 3:11,
rows = 3:4,
decimals = 1
) %>%
fmt_number(
columns = 3:11,
rows = c(1,2,5:7),
decimals = 1
) %>%
tab_source_note(
source_note = md("@MambaMetrics | MAMBA")
)
}
# model output
models_all_tbl <- function(m) {
model_df_all_viz <- models_df_fmt %>%
select(1,3,2,4:12) %>%
filter(if (m == "All") Metric != m else Metric == m )
model_df_all_viz %>%
gt(groupname_col = "Game") %>%
# opt_all_caps() %>%
opt_table_font(
font = list(
google_font("Chivo"),
default_fonts()
)
) %>%
tab_header(
title = md("**Raw Model Output by Bet Type**")
) %>%
tab_style(
style = cell_borders(
sides = "bottom", color = "transparent", weight = px(2)
),
locations = cells_body(
columns = everything(),
rows = nrow(model_df_all_viz)
)
) %>%
tab_options(
table.font.weight = "bold",
table.font.size = 12,
table.border.top.width = px(3),
table.border.top.color = "transparent",
table.border.bottom.color = "transparent",
table.border.bottom.width = px(3),
column_labels.border.top.width = px(3),
column_labels.border.top.color = "transparent",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
column_labels.font.weight = "bold",
column_labels.background.color = "black",
column_labels.font.size = 14,
data_row.padding = px(3),
row_group.padding = px(3),
row_group.background.color = "#e3e2e1",
row_group.font.size = 13,
source_notes.font.size = 8
) %>%
cols_label(
Team = "",
Metric = ""
) %>%
cols_align(
align = "center",
columns = 4:12
) %>%
fmt_percent(
columns = 4:12,
rows = Metric == "Moneyline",
decimals = 1
) %>%
fmt_number(
columns = 4:12,
rows = Metric != "Moneyline",
decimals = 1
) %>%
opt_row_striping(
) %>%
tab_source_note(
source_note = md("@MambaMetrics | MAMBA")
)
}
# model plays
plays_tbl <- function() {
bets_df_viz %>%
gt() %>%
# opt_all_caps()  %>%
opt_table_font(
font = list(
google_font("Chivo"),
default_fonts()
)
) %>%
tab_header(
title = md("**All Model Plays**")
) %>%
tab_style(
style = cell_borders(
sides = "bottom", color = "transparent", weight = px(2)
),
locations = cells_body(
columns = everything(),
rows = nrow(bets_df_viz)
)
) %>%
tab_options(
table.font.weight = "bold",
table.font.size = 12,
table.border.top.width = px(3),
table.border.top.color = "transparent",
table.border.bottom.color = "transparent",
table.border.bottom.width = px(3),
column_labels.border.top.width = px(3),
column_labels.border.top.color = "transparent",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
column_labels.font.weight = "bold",
column_labels.background.color = "black",
column_labels.font.size = 14,
data_row.padding = px(3),
row_group.padding = px(3),
row_group.background.color = "#e3e2e1",
row_group.font.size = 13,
source_notes.font.size = 8
) %>%
cols_label(
Game = "Game",
game_time = "Game Time",
team = "Team",
bet_type = "Bet Type",
line = "Line",
edge = "Edge"
) %>%
cols_align(
align = "center",
columns = 2:ncol(bets_df_viz)
) %>%
fmt_percent(
columns = 6,
rows = bet_type == "ML",
decimals = 1
) %>%
fmt_number(
columns = 6,
rows = bet_type != "ML",
decimals = 1
) %>%
opt_row_striping(
) %>%
tab_source_note(
source_note = md("@MambaMetrics | MAMBA")
)
}
# official model plays
plays_official_tbl <- function() {
bets_official_df_viz %>%
gt() %>%
# opt_all_caps()  %>%
opt_table_font(
font = list(
google_font("Chivo"),
default_fonts()
)
) %>%
tab_header(
title = md("**All Official Plays**")
) %>%
tab_style(
style = cell_borders(
sides = "bottom", color = "transparent", weight = px(2)
),
locations = cells_body(
columns = everything(),
rows = nrow(bets_official_df_viz)
)
) %>%
tab_options(
table.font.weight = "bold",
table.font.size = 12,
table.border.top.width = px(3),
table.border.top.color = "transparent",
table.border.bottom.color = "transparent",
table.border.bottom.width = px(3),
column_labels.border.top.width = px(3),
column_labels.border.top.color = "transparent",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
column_labels.font.weight = "bold",
column_labels.background.color = "black",
column_labels.font.size = 14,
data_row.padding = px(3),
row_group.padding = px(3),
row_group.background.color = "#e3e2e1",
row_group.font.size = 13,
source_notes.font.size = 8
) %>%
cols_label(
Game = "Game",
game_time = "Game Time",
team = "Team",
bet_type = "Bet type",
line = "Line",
edge = "Edge"
) %>%
cols_align(
align = "center",
columns = 2:ncol(bets_official_df_viz)
) %>%
fmt_percent(
columns = 6,
rows = bet_type == "ML",
decimals = 1
) %>%
fmt_number(
columns = 6,
rows = bet_type != "ML",
decimals = 1
) %>%
opt_row_striping(
) %>%
tab_source_note(
source_note = md("@MambaMetrics | MAMBA")
)
}
# variable importance
var_imp_tbl <- function() {
imp_viz %>%
gt() %>%
# opt_all_caps()  %>%
opt_table_font(
font = list(
google_font("Chivo"),
default_fonts()
)
) %>%
tab_header(
title = md("**MAMBA Variable Importance**")
) %>%
tab_spanner(
label = "Scores",
columns = 1:2
) %>%
tab_spanner(
label = "Win %",
columns = 3:4
) %>%
tab_style(
style = list(
cell_fill(color = "black"),
cell_text(color = "white")
),
locations = list(
cells_column_spanners(
spanners = c("Scores", "Win %")
)
)
) %>%
tab_style(
style = cell_borders(
sides = "bottom", color = "transparent", weight = px(2)
),
locations = cells_body(
columns = everything(),
rows = nrow(imp_viz)
)
) %>%
tab_options(
table.font.weight = "bold",
table.font.size = 12,
table.border.top.width = px(3),
table.border.top.color = "transparent",
table.border.bottom.color = "transparent",
table.border.bottom.width = px(3),
column_labels.border.top.width = px(3),
column_labels.border.top.color = "transparent",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
column_labels.font.weight = "bold",
column_labels.background.color = "#e3e2e1",
column_labels.font.size = 12,
data_row.padding = px(3),
row_group.padding = px(3),
row_group.background.color = "white",
row_group.font.size = 12,
source_notes.font.size = 8
) %>%
cols_align(
align = "center",
columns = everything()
) %>%
cols_label(
score_var = "Variable",
imp_score = "Importance",
win_var = "Variable",
imp_win = "Importance"
) %>%
gt_add_divider(columns = "imp_score", style = "solid"
) %>%
opt_row_striping(
) %>%
tab_source_note(
source_note = md("@MambaMetrics | MAMBA")
)
}
# Define server logic to plot various variables against mpg
server <- function(input, output, session) {
variablename <- reactiveVal(gm_list[1])
metricname <- reactiveVal(metric_list[1])
locationname <- reactiveVal(loc_list[1])
formulaText <- reactive({
paste0(variablename())
})
output$caption <- renderText({
formulaText()
})
observeEvent(input$variable1, {
updateSelectInput(session, "variable2", selected=input$variable1)
variablename(input$variable1)
})
observeEvent(input$variable2, {
updateSelectInput(session, "variable1", selected=input$variable2)
variablename(input$variable2)
})
observeEvent(input$variable3, {
updateSelectInput(session, "variable3", selected=input$variable3)
metricname(input$variable3)
})
observeEvent(input$variable4, {
updateSelectInput(session, "variable4", selected=input$variable4)
locationname(input$variable4)
})
#Reactive
gm_input <- reactive({
xx <- slate_df %>% filter(Game == as.character(variablename()))
return(xx)
})
metric_input <- reactive({
metricname()
})
location_input <- reactive({
locationname()
})
### Summary Plot
output$summary_plot <- render_gt({
summary_tbl(gm_input()$Away, gm_input()$Home, gm_input()$Arena, gm_input()$Location)
})
### Player Stats Plot
output$player_plot <- render_gt({
player_tbl(gm_input()$Away, gm_input()$Home)
})
### Team Stats Plot
output$team_plot <- render_gt({
team_tbl(location_input())
})
### Rank Plot
output$rank_plot <- render_gt({
rank_tbl(gm_input()$Away, gm_input()$Home)
})
### Stats Plot
output$stats_plot <- render_gt({
stats_tbl(gm_input()$Away, gm_input()$Home)
})
### Models Plot - Game
output$models_plot <- render_gt({
models_tbl(gm_input()$Game)
})
### Models Plot - All
output$models_all_plot <- render_gt({
models_all_tbl(metric_input())
})
### Plays Plot
output$plays_plot <- render_gt({
plays_tbl()
})
### Official Plays Plot
output$plays_official_plot <- render_gt({
plays_official_tbl()
})
### Var Imp Plot
output$var_imp_plot <- render_gt({
var_imp_tbl()
})
}
### Define UI ----
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "darkly"),
titlePanel("MAMBA Metrics - Today's Plays"),
# fluidRow(column(selectInput("variable", "Game:", gm_list), width = 5)),
tabsetPanel(type = "tabs",
tabPanel("Plays", fluid = T,
sidebarLayout(
sidebarPanel(
paste0("All Plays for ", format(Sys.Date(), "%B %d %Y")),
p(),
p("*Official Plays are vetted to account for last minute lineup changes, major injuries, etc.")
),
mainPanel(
gt_output("plays_plot"),
h3(textOutput(""), align = "center"),
gt_output("plays_official_plot")
)
)
),
tabPanel("Game Summary", fluid = T,
sidebarLayout(
sidebarPanel(
selectInput("variable1", "Game:", gm_list),
gt_output("summary_plot"),
h1(textOutput(""), align = "center"),
radioButtons("visuBtn", "Show Team:", choices = c(Stats = "stats", Rank = "rank"),
inline = T),
conditionalPanel(
condition = "input.visuBtn == 'stats'",
gt_output("stats_plot")
),
conditionalPanel(
condition = "input.visuBtn == 'rank'",
gt_output("rank_plot")
)
),
mainPanel(fluidRow(
h3(textOutput("caption"), align = "center"),
gt_output("models_plot")
)
)
)
),
tabPanel("All Games", fluid = T,
sidebarLayout(
sidebarPanel(
selectInput("variable3", "Bet Type:", metric_list),
gt_output("var_imp_plot")
),
mainPanel(
gt_output("models_all_plot")
)
)
),
tabPanel("Player Stats", fluid = T,
selectInput("variable2", "Game:", gm_list, width = '375px'),
mainPanel(
gt_output("player_plot"),
width = 12
)
),
tabPanel("Team Stats", fluid = T,
selectInput("variable4", "Location:", loc_list, width = '375px'),
mainPanel(
gt_output("team_plot"),
width = 12
)
)
)
)
shinyApp(ui, server)
nbastatR::win_probability(game_ids = c(21700002))
test <- nbastatR::win_probability(game_ids = c(21700002))
View(test)
