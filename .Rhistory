filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_under[[i]],"under_result") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(under_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume /(game_num*1.1))*100,2)) %>%
mutate(model = gsub("([a-z]*)(.*)", "\\1", as.character(nms))) %>%
mutate(type = "under") %>%
mutate(wager = 1.1) %>%
rename("edge" = as.character(nms),
"result" = "under_result") %>%
select(1:7,9,10,11,12)
}
### no keys ----
results_df <- rbindlist(l = c(results_spread_list, results_ml_list, results_over_list, results_under_list))
results_df %>%
group_by(model, type) %>%
summarise(result = sum(result), game_num = n(), wager = sum(wager)) %>%
mutate(roi = round((result/wager),4)) %>%
arrange(desc(result)) %>%
select(type, model, result, roi, game_num) %>%
gt(groupname_col = "type") %>%
row_group_order(groups = c("spread", "ml", "over", "under")) %>%
fmt_percent(columns = roi, decimals = 1) %>%
fmt_number(columns = result, decimals = 1) %>%
tab_header(
title = "Model Summary by Bet Type",
subtitle = "All Plays"
) %>%
cols_label(
model = "Model",
result = "Units",
roi = "ROI",
game_num = "Games",
) %>%
cols_align(
align = "center"
) %>%
tab_source_note(
source_note = "@MambaMetrics"
) %>%
gtExtras::gt_theme_538()
### use results_edges for viz
viz_spread <- peak_spread_filtered %>%
arrange(model)
viz_ml <- peak_ml_filtered %>%
arrange(model)
viz_over <- peak_over_filtered %>%
arrange(model)
### Edge Analysis ----
results_book <- dplyr::tbl(DBI::dbConnect(RSQLite::SQLite(), "../NBAdb/nba_db.sqlite"), "ResultsBook") %>%
collect() %>%
mutate(date = as_date(date, origin ="1970-01-01"))
# add wager column for calculating ml roi
results_book <- results_book %>%
mutate(ml_wager = ifelse(ml < 100, ml/-100, 1))
### Edge Analysis ----
results_book <- dplyr::tbl(DBI::dbConnect(RSQLite::SQLite(), ".../nba_sql_db/nba_db"), "ResultsBook") %>%
collect() %>%
mutate(date = as_date(date, origin ="1970-01-01"))
### Edge Analysis ----
results_book <- dplyr::tbl(DBI::dbConnect(RSQLite::SQLite(), "../nba_sql_db/nba_db"), "ResultsBook") %>%
collect() %>%
mutate(date = as_date(date, origin ="1970-01-01"))
# add wager column for calculating ml roi
results_book <- results_book %>%
mutate(ml_wager = ifelse(ml < 100, ml/-100, 1))
### Spread Key ----
names_spread <- names(results_book %>% select(ends_with("spread_edge")))
results_spread_list <- list()
for (i in seq_along(names_spread)) {
nms <- names_spread[[i]]
results_spread_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_spread[[i]],"ats_result") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ats_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume /(game_num*1.1))*100,2)) %>%
select(1:7,9,8)
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]][order(-results_spread_list[[j]][,7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
peak_spread <- rbindlist(peak_spread_list, fill = TRUE, idcol = F) %>%
select(1,9,7:8,5,10:17)
peak_spread_filtered <- peak_spread %>%
pivot_longer(cols = !date:roi, names_to = "model", values_to = "key") %>%
arrange(desc(cume)) %>%
mutate(model = gsub("([a-z]*_[a-z]*)(.*)", "\\1", model)) %>%
drop_na()
### ML Key ----
names_ml <- names(results_book %>% select(ends_with("ml_edge")))
results_ml_list <- list()
for (i in seq_along(names_ml)) {
nms <- names_ml[[i]]
results_ml_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_ml[[i]],"ml_result","ml_wager") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ml_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume / cumsum(ml_wager))*100,2)) %>%
select(1:6,8,10,9)
}
peak_ml_list <- list()
for (j in seq_along(results_ml_list)) {
x <- results_ml_list[[j]][order(-results_ml_list[[j]][,7]), ]
peak_ml_list[[j]] <- as.data.table(head(x,1))
}
peak_ml <- rbindlist(peak_ml_list, fill = TRUE, idcol = F) %>%
select(1,9,7:8,5,10:17)
View(results_book)
### Edge Analysis ----
results_book <- dplyr::tbl(DBI::dbConnect(RSQLite::SQLite(), "../nba_sql_db/nba_db"), "ResultsBook") %>%
collect() %>%
mutate(date = as_date(date, origin ="1970-01-01"))
# add wager column for calculating ml roi
results_book <- results_book %>%
mutate(ml_wager = ifelse(ml < 100, ml/-100, 1))
### Spread Key ----
names_spread <- names(results_book %>% select(ends_with("spread_edge")))
results_spread_list <- list()
for (i in seq_along(names_spread)) {
nms <- names_spread[[i]]
results_spread_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_spread[[i]],"ats_result") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ats_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume /(game_num*1.1))*100,2)) %>%
select(1:7,9,8)
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]][order(-results_spread_list[[j]][,7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
View(results_spread_list)
View(results_spread_list[["kendall_spread_edge"]])
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]][order(-results_spread_list[[j]][,7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
View(results_spread_list)
results_spread_list[["kendall_spread_edge"]]
View(results_spread_list)
View(results_spread_list[["kendall_spread_edge"]])
View(results_spread_list)
View(results_spread_list[["kendall_spread_edge"]])
library(tidyverse)
library(lubridate)
library(data.table)
library(nbastatR)
options(scipen = 999)
plays_db <- dplyr::tbl(DBI::dbConnect(RSQLite::SQLite(), "../nba_sql_db/nba_db"), "Plays") %>%
collect() %>%
mutate(date = as_date(date, origin ="1970-01-01"))
yd <- max(plays_db$date)
nba_plays <- plays_db %>% filter(date == yd)
dataGameLogsTeam <- game_logs(seasons = 2023, result_types = "team", season_types = "Regular Season")
results_scores <- dataGameLogsTeam %>%
arrange(dateGame,idGame) %>%
mutate(dateGame = as_date(dateGame)) %>%
left_join(dataGameLogsTeam,
by = c("idGame" = "idGame", "slugTeam" = "slugOpponent")) %>%
select(6,5,13,54,8,90,45) %>%
filter(dateGame.x == yd)
colnames(results_scores) <- c("game_id", "date", "loc", "opp_team", "team",
"opp_score", "team_score")
yd_results <- nba_plays %>%
left_join(results_scores, by = c("game_id" = "game_id", "date" = "date",
"loc" = "loc", "opp_team" = "opp_team",
"team" = "team")
) %>% select(1:5, 76, 77, 6:75)
yd_results
results_book <- yd_results %>%
mutate(margin = team_score - opp_score) %>%
mutate(result = if_else(team_score > opp_score, "W", "L" )) %>%
mutate(game_total = team_score + opp_score) %>%
mutate(ats_margin = margin + spread) %>%
mutate(ats_result = if_else((margin + spread) == 0, 0, if_else(ats_margin > 0, 1, -1.1))) %>%
mutate(ml_result = case_when(ml > 0 & (team_score - opp_score) > 0 ~ ml/100,
ml > 0 & (team_score - opp_score) < 0 ~ -1,
(team_score - opp_score) > 0 ~ 1,
(team_score - opp_score) < 0 ~ ml/100)) %>%
mutate(over_result = if_else((game_total - total) == 0, 0, if_else(game_total > total, 1, -1.1))) %>%
mutate(under_result = if_else((game_total - total) == 0, 0, if_else(game_total < total, 1, -1.1))) %>%
select(1:10, 78:85, 11:77)
results_book$kendall_spread_result <- with(results_book, ifelse(kendall_spread_edge>0,ats_result,0))
results_book$kendall_ml_result <- with(results_book, ifelse(kendall_ml_edge>0,ml_result,0))
results_book$kendall_over_result <- with(results_book, ifelse(kendall_over_edge>0,over_result,0))
results_book$kendall_under_result <- with(results_book, ifelse(kendall_under_edge>0,under_result,0))
results_book$tyra_spread_result <- with(results_book, ifelse(tyra_spread_edge>0,ats_result,0))
results_book$tyra_ml_result <- with(results_book, ifelse(tyra_ml_edge>0,ml_result,0))
results_book$tyra_over_result <- with(results_book, ifelse(tyra_over_edge>0,over_result,0))
results_book$tyra_under_result <- with(results_book, ifelse(tyra_under_edge>0,under_result,0))
results_book$gisele_spread_result <- with(results_book, ifelse(gisele_spread_edge>0,ats_result,0))
results_book$gisele_ml_result <- with(results_book, ifelse(gisele_ml_edge>0,ml_result,0))
results_book$gisele_over_result <- with(results_book, ifelse(gisele_over_edge>0,over_result,0))
results_book$gisele_under_result <- with(results_book, ifelse(gisele_under_edge>0,under_result,0))
results_book$chrissy_spread_result <- with(results_book, ifelse(chrissy_spread_edge>0,ats_result,0))
results_book$chrissy_ml_result <- with(results_book, ifelse(chrissy_ml_edge>0,ml_result,0))
results_book$chrissy_over_result <- with(results_book, ifelse(chrissy_over_edge>0,over_result,0))
results_book$chrissy_under_result <- with(results_book, ifelse(chrissy_under_edge>0,under_result,0))
results_book$kate_spread_result <- with(results_book, ifelse(kate_spread_edge>0,ats_result,0))
results_book$kate_ml_result <- with(results_book, ifelse(kate_ml_edge>0,ml_result,0))
results_book$kate_over_result <- with(results_book, ifelse(kate_over_edge>0,over_result,0))
results_book$kate_under_result <- with(results_book, ifelse(kate_under_edge>0,under_result,0))
results_book$cindy_spread_result <- with(results_book, ifelse(cindy_spread_edge>0,ats_result,0))
results_book$cindy_ml_result <- with(results_book, ifelse(cindy_ml_edge>0,ml_result,0))
results_book$cindy_over_result <- with(results_book, ifelse(cindy_over_edge>0,over_result,0))
results_book$cindy_under_result <- with(results_book, ifelse(cindy_under_edge>0,under_result,0))
results_book$naomi_spread_result <- with(results_book, ifelse(naomi_spread_edge>0,ats_result,0))
results_book$naomi_ml_result <- with(results_book, ifelse(naomi_ml_edge>0,ml_result,0))
results_book$naomi_over_result <- with(results_book, ifelse(naomi_over_edge>0,over_result,0))
results_book$naomi_under_result <- with(results_book, ifelse(naomi_under_edge>0,under_result,0))
results_book$heidi_spread_result <- with(results_book, ifelse(heidi_spread_edge>0,ats_result,0))
results_book$heidi_ml_result <- with(results_book, ifelse(heidi_ml_edge>0,ml_result,0))
results_book$heidi_over_result <- with(results_book, ifelse(heidi_over_edge>0,over_result,0))
results_book$heidi_under_result <- with(results_book, ifelse(heidi_under_edge>0,under_result,0))
results_book$adriana_spread_result <- with(results_book, ifelse(adriana_spread_edge>0,ats_result,0))
results_book$adriana_ml_result <- with(results_book, ifelse(adriana_ml_edge>0,ml_result,0))
results_book$adriana_over_result <- with(results_book, ifelse(adriana_over_edge>0,over_result,0))
results_book$adriana_under_result <- with(results_book, ifelse(adriana_under_edge>0,under_result,0))
results_book <- results_book %>% select(1:81, 86:121, 82:85)
results_book
### Edge Analysis ----
results_book <- dplyr::tbl(DBI::dbConnect(RSQLite::SQLite(), "../nba_sql_db/nba_db"), "ResultsBook") %>%
collect() %>%
mutate(date = as_date(date, origin ="1970-01-01"))
# add wager column for calculating ml roi
results_book <- results_book %>%
mutate(ml_wager = ifelse(ml < 100, ml/-100, 1))
### Spread Key ----
names_spread <- names(results_book %>% select(ends_with("spread_edge")))
results_spread_list <- list()
for (i in seq_along(names_spread)) {
nms <- names_spread[[i]]
results_spread_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_spread[[i]],"ats_result") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ats_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume /(game_num*1.1))*100,2)) %>%
select(1:7,9,8)
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]][order(-results_spread_list[[j]][,7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
results_spread_list <- list()
for (i in seq_along(names_spread)) {
nms <- names_spread[[i]]
results_spread_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_spread[[i]],"ats_result") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ats_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume /(game_num*1.1))*100,2)) %>%
select(1:7,9,8)
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]][order(-results_spread_list[[j]][,7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
order(-results_spread_list[[j]][,7]),
order(-results_spread_list[[j]][,7])
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]][order(-results_spread_list[[j]][7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
# Extract the data frame and store it in a separate variable
data_frame <- results_spread_list[[j]]
# Sort the data frame by the 7th column in descending order
x <- data_frame[order(-data_frame[, 7]), ]
# x <- results_spread_list[[j]][order(-results_spread_list[[j]][,7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
# Extract the data frame and store it in a separate variable
data_frame <- results_spread_list[[j]]
# Sort the data frame by the 7th column in descending order
x <- ata_frame[order(-data_frame[, 7]), , drop = FALSE]
# x <- results_spread_list[[j]][order(-results_spread_list[[j]][,7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
# Extract the data frame and store it in a separate variable
data_frame <- results_spread_list[[j]]
# Sort the data frame by the 7th column in descending order
x <- data_frame[order(-data_frame[, 7]), , drop = FALSE]
# x <- results_spread_list[[j]][order(-results_spread_list[[j]][,7]), ]
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]] %>%
arrange(desc(.data[, 7]))
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]] %>%
arrange(desc(.data[[, 7]]))
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
View(results_spread_list)
View(results_spread_list[["kendall_spread_edge"]])
peak_spread_list <- list()
for (j in seq_along(results_spread_list)) {
x <- results_spread_list[[j]] %>%
arrange(desc(.data[["cume"]]))
peak_spread_list[[j]] <- as.data.table(head(x,1))
}
peak_spread <- rbindlist(peak_spread_list, fill = TRUE, idcol = F) %>%
select(1,9,7:8,5,10:17)
### ML Key ----
names_ml <- names(results_book %>% select(ends_with("ml_edge")))
results_ml_list <- list()
for (i in seq_along(names_ml)) {
nms <- names_ml[[i]]
results_ml_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_ml[[i]],"ml_result","ml_wager") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ml_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume / cumsum(ml_wager))*100,2)) %>%
select(1:6,8,10,9)
}
peak_ml_list <- list()
for (j in seq_along(results_ml_list)) {
x <- results_spread_list[[j]] %>%
arrange(desc(.data[["cume"]]))
peak_ml_list[[j]] <- as.data.table(head(x,1))
}
peak_ml <- rbindlist(peak_ml_list, fill = TRUE, idcol = F) %>%
select(1,9,7:8,5,10:17)
peak_ml_filtered <- peak_ml %>%
pivot_longer(cols = !date:roi, names_to = "model", values_to = "key") %>%
arrange(desc(cume)) %>%
mutate(model = gsub("([a-z]*_[a-z]*)(.*)", "\\1", model)) %>%
drop_na()
### Clean Environment ----
rm(list=ls()[! ls() %in% c("peak_spread_filtered","peak_ml_filtered",
"peak_over_filtered","peak_under_filtered",
"results_spread_list","results_ml_list",
"results_over_list","results_under_list")])
View(peak_ml_filtered)
### ML Key ----
names_ml <- names(results_book %>% select(ends_with("ml_edge")))
### Edge Analysis ----
results_book <- dplyr::tbl(DBI::dbConnect(RSQLite::SQLite(), "../nba_sql_db/nba_db"), "ResultsBook") %>%
collect() %>%
mutate(date = as_date(date, origin ="1970-01-01"))
# add wager column for calculating ml roi
results_book <- results_book %>%
mutate(ml_wager = ifelse(ml < 100, ml/-100, 1))
### ML Key ----
names_ml <- names(results_book %>% select(ends_with("ml_edge")))
results_ml_list <- list()
for (i in seq_along(names_ml)) {
nms <- names_ml[[i]]
results_ml_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_ml[[i]],"ml_result","ml_wager") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ml_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume / cumsum(ml_wager))*100,2)) %>%
select(1:6,8,10,9)
}
peak_ml_list <- list()
for (j in seq_along(results_ml_list)) {
x <- results_spread_list[[j]] %>%
arrange(desc(.data[["cume"]]))
peak_ml_list[[j]] <- as.data.table(head(x,1))
}
peak_ml <- rbindlist(peak_ml_list, fill = TRUE, idcol = F) %>%
select(1,9,7:8,5,10:17)
peak_ml_filtered <- peak_ml %>%
pivot_longer(cols = !date:roi, names_to = "model", values_to = "key") %>%
arrange(desc(cume)) %>%
mutate(model = gsub("([a-z]*_[a-z]*)(.*)", "\\1", model)) %>%
drop_na()
View(peak_ml_filtered)
View(peak_ml_list)
View(peak_ml_list[[1]])
View(peak_ml_list)
View(peak_ml_filtered)
### ML Key ----
names_ml <- names(results_book %>% select(ends_with("ml_edge")))
results_ml_list <- list()
for (i in seq_along(names_ml)) {
nms <- names_ml[[i]]
results_ml_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_ml[[i]],"ml_result","ml_wager") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ml_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume / cumsum(ml_wager))*100,2)) %>%
mutate(model = gsub("([a-z]*)(.*)", "\\1", as.character(nms))) %>%
mutate(type = "ml") %>%
rename("edge" = as.character(nms),
"result" = "ml_result",
"wager" = "ml_wager") %>%
select(1:6,8,10,11,12,7)
}
View(results_ml_list)
View(results_ml_list[["kendall_ml_edge"]])
### ML Key ----
names_ml <- names(results_book %>% select(ends_with("ml_edge")))
results_ml_list <- list()
for (i in seq_along(names_ml)) {
nms <- names_ml[[i]]
results_ml_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_ml[[i]],"ml_result","ml_wager") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ml_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume / cumsum(ml_wager))*100,2)) %>%
select(1:6,8,10,9)
}
peak_ml_list <- list()
for (j in seq_along(results_ml_list)) {
x <- results_ml_list[[j]][order(-results_ml_list[[j]][,7]), ]
peak_ml_list[[j]] <- as.data.table(head(x,1))
}
peak_ml <- rbindlist(peak_ml_list, fill = TRUE, idcol = F) %>%
select(1,9,7:8,5,10:17)
### Edge Analysis ----
results_book <- dplyr::tbl(DBI::dbConnect(RSQLite::SQLite(), "../nba_sql_db/nba_db"), "ResultsBook") %>%
collect() %>%
mutate(date = as_date(date, origin ="1970-01-01"))
# add wager column for calculating ml roi
results_book <- results_book %>%
mutate(ml_wager = ifelse(ml < 100, ml/-100, 1))
### ML Key ----
names_ml <- names(results_book %>% select(ends_with("ml_edge")))
results_ml_list <- list()
for (i in seq_along(names_ml)) {
nms <- names_ml[[i]]
results_ml_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_ml[[i]],"ml_result","ml_wager") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ml_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume / cumsum(ml_wager))*100,2)) %>%
select(1:6,8,10,9)
}
### ML Key ----
names_ml <- names(results_book %>% select(ends_with("ml_edge")))
results_ml_list <- list()
for (i in seq_along(names_ml)) {
nms <- names_ml[[i]]
results_ml_list[[paste0(nms, collapse = "_")]] <- results_book %>%
filter(if_all(all_of(nms), ~ .> 0)) %>%
select("date","loc","opp_team","team",names_ml[[i]],"ml_result","ml_wager") %>%
arrange(desc(select(.,ends_with("edge")))) %>%
mutate(cume = round(cumsum(ml_result),1)) %>%
mutate(game_num = row_number()) %>%
mutate(roi = round((cume / cumsum(ml_wager))*100,2)) %>%
select(1:6,8,10,9)
}
peak_ml_list <- list()
for (j in seq_along(results_ml_list)) {
x <- results_spread_list[[j]] %>%
arrange(desc(.data[["cume"]]))
peak_ml_list[[j]] <- as.data.table(head(x,1))
}
peak_ml <- rbindlist(peak_ml_list, fill = TRUE, idcol = F) %>%
select(1,9,7:8,5,10:17)
peak_ml_filtered <- peak_ml %>%
pivot_longer(cols = !date:roi, names_to = "model", values_to = "key") %>%
arrange(desc(cume)) %>%
mutate(model = gsub("([a-z]*_[a-z]*)(.*)", "\\1", model)) %>%
drop_na()
View(peak_ml_filtered)
View(results_ml_list)
View(results_ml_list[["kendall_ml_edge"]])
View(results_ml_list[["cindy_ml_edge"]])
peak_ml_list <- list()
for (j in seq_along(results_ml_list)) {
x <- results_ml_list[[j]] %>%
arrange(desc(.data[["cume"]]))
peak_ml_list[[j]] <- as.data.table(head(x,1))
}
peak_ml <- rbindlist(peak_ml_list, fill = TRUE, idcol = F) %>%
select(1,9,7:8,5,10:17)
peak_ml_filtered <- peak_ml %>%
pivot_longer(cols = !date:roi, names_to = "model", values_to = "key") %>%
arrange(desc(cume)) %>%
mutate(model = gsub("([a-z]*_[a-z]*)(.*)", "\\1", model)) %>%
drop_na()
View(peak_ml_filtered)
