}
shot_heatmap_team <- function(team) {
shots_heatmap <- shots_heatmap %>%
filter(team_name == team) %>%
filter(shot_zone_basic != "Restricted Area")
hm <- generate_heatmap_chart(shots_heatmap, plot_court(court_themes$dark))
ggdraw(hm) +
theme(plot.background = element_rect(fill="black", color = NA))
}
shot_scatter_team <- function(team) {
shots_heatmap <- shots_heatmap %>%
filter(team_name == team)
hm <- generate_scatter_chart(shots_heatmap, plot_court(court_themes$light))
p <- ggdraw(hm) +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
title <- ggdraw() +
draw_label(team, fontface='bold', size = 16, color = "black", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
plot_grid(title, p, ncol = 1, rel_heights = c(0.2, 1))
}
### Run functions for season ----
shot_chart_player("Luka Doncic")
# Season shot chart function players   ------------------------------------------
shot_chart_player <- function(player) {
shots <- shots %>%
filter(player_name == player)
# Convert shot location data to binned-hexagon data  ----------------------
xbnds <- c(plyr::round_any(min(shots$loc_x), 1.5, floor) - 1e-6,
plyr::round_any(max(shots$loc_x), 1.5, ceiling) + 1e-6)
xbins <- diff(xbnds) / 1.5
ybnds <- c(plyr::round_any(min(shots$loc_y), 1.5, floor) - 1e-6,
plyr::round_any(max(shots$loc_y), 1.5, ceiling) + 1e-6)
ybins <- diff(ybnds) / 1.5
hb <- hexbin(
x = shots$loc_x,
y = shots$loc_y,
xbins = xbins,
xbnds = xbnds,
ybnds = ybnds,
shape = ybins / xbins,
IDs = TRUE
)
shots <- shots %>% mutate(hexbin_id = hb@cID)
hexbin_stats <- shots %>%
mutate(hexbin_id = hb@cID) %>%
group_by(hexbin_id) %>%
summarize(
hex_attempts = n(),
hex_pct = mean(shot_made_numeric),
hex_points_scored = sum(shot_made_numeric * shot_value),
hex_points_per_shot = mean(shot_made_numeric * shot_value)
)
hexbin_ids_to_zones <- shots %>%
group_by(hexbin_id, shot_zone_range, shot_zone_area) %>%
summarize(attempts = n()) %>%
ungroup() %>%
arrange(hexbin_id, desc(attempts)) %>%
group_by(hexbin_id) %>%
filter(row_number() == 1) %>%
select(hexbin_id, shot_zone_range, shot_zone_area)
hexbin_stats <- inner_join(hexbin_stats, hexbin_ids_to_zones, by = "hexbin_id")
# from hexbin package, see: https://github.com/edzer/hexbin
sx <- hb@xbins / diff(hb@xbnds)
sy <- (hb@xbins * hb@shape) / diff(hb@ybnds)
dx <- 1 / (2 * sx)
dy <- 1 / (2 * sqrt(3) * sy)
origin_coords <- hexcoords(dx, dy)
hex_centers <- hcell2xy(hb)
hexbin_coords <- bind_rows(lapply(1:hb@ncells, function(i) {
data.frame(
x = origin_coords$x + hex_centers$x[i],
y = origin_coords$y + hex_centers$y[i],
center_x = hex_centers$x[i],
center_y = hex_centers$y[i],
hexbin_id = hb@cell[i]
)
}))
hex_data <- inner_join(hexbin_coords, hexbin_stats, by = "hexbin_id")
grouped_shots <- shots %>%
group_by(shot_zone_range, shot_zone_area)
zone_stats <- grouped_shots %>%
summarize(
zone_attempts = n(),
zone_pct = mean(shot_made_numeric),
zone_points_scored = sum(shot_made_numeric * shot_value),
zone_points_per_shot = mean(shot_made_numeric * shot_value),
team_name
)
league_zone_stats <- league_averages %>%
group_by(shot_zone_range, shot_zone_area) %>%
summarize(league_pct = sum(fgm) / sum(fga))
join_keys <- c("shot_zone_area", "shot_zone_range")
hex_data <- hex_data %>%
inner_join(zone_stats, by = join_keys) %>%
inner_join(league_zone_stats, by = join_keys)
max_hex_attempts <- max(hex_data$hex_attempts)
hex_data <- hex_data %>%
mutate(radius_factor = 0.25 + (1 - 0.25) * log(hex_attempts + 1) / log(max_hex_attempts + 1),
adj_x = center_x + radius_factor * (x - center_x),
adj_y = center_y + radius_factor * (y - center_y),
bounded_fg_diff = pmin(pmax(zone_pct - league_pct, -0.15), 0.15),
bounded_fg_pct = pmin(pmax(zone_pct, 0.2), 0.7),
bounded_points_per_shot = pmin(pmax(zone_points_per_shot, 0.5), 1.5)
)
names(shots) <- sub(".*\\.", "", names(shots))
names(league_averages) <- sub(".*\\.", "", names(league_averages))
df <- hex_data
names(df) <- sub(".*\\.", "", names(df))
p <- plot_court(court_themes$light) +
geom_polygon(
data = df,
aes(
x = adj_x,
y = adj_y,
group = hexbin_id,
fill = bounded_fg_diff,
color = after_scale(clr_darken(fill, .333))),
size = .25) +
scale_x_continuous(limits = c(-27.5, 27.5)) +
scale_y_continuous(limits = c(0, 45)) +
scale_fill_distiller(direction = -1,
palette = "RdBu",
limits = c(-.15, .15),
breaks = seq(-.15, .15, .03),
labels = c("-15%", "-12%", "-9%", "-6%", "-3%", "0%", "+3%", "+6%", "+9%", "+12%", "+15%"),
"FG Percentage Points vs. League Average") +
guides(fill=guide_legend(
label.position = 'bottom',
title.position = 'top',
keywidth=.45,
keyheight=.15,
default.unit="inch",
title.hjust = .5,
title.vjust = 0,
label.vjust = 3,
nrow = 1))  +
theme(text=element_text(size=14,  family="Gill Sans MT"),
legend.spacing.x = unit(0, 'cm'),
legend.title=element_text(size=12),
legend.text = element_text(size = rel(0.6)),
legend.margin=margin(-10,0,-1,0),
legend.position = 'bottom',
legend.box.margin=margin(-30,0,15,0),
plot.title = element_text(size = 18, hjust = 0.5, vjust = -1, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = -.5),
plot.caption = element_text(face = "italic", size = 8),
plot.margin = margin(1, -5, 1, -5, "cm")) +
labs(title = player,
subtitle = "2022-23 Regular Season")
ggdraw(p) +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
}
### Run functions for season ----
shot_chart_player("Luka Doncic")
# Season shot chart function players   ------------------------------------------
shot_chart_player <- function(player) {
shots <- shots %>%
filter(player_name == player)
# Convert shot location data to binned-hexagon data  ----------------------
xbnds <- c(plyr::round_any(min(shots$loc_x), 1.5, floor) - 1e-6,
plyr::round_any(max(shots$loc_x), 1.5, ceiling) + 1e-6)
xbins <- diff(xbnds) / 1.5
ybnds <- c(plyr::round_any(min(shots$loc_y), 1.5, floor) - 1e-6,
plyr::round_any(max(shots$loc_y), 1.5, ceiling) + 1e-6)
ybins <- diff(ybnds) / 1.5
hb <- hexbin(
x = shots$loc_x,
y = shots$loc_y,
xbins = xbins,
xbnds = xbnds,
ybnds = ybnds,
shape = ybins / xbins,
IDs = TRUE
)
shots <- shots %>% mutate(hexbin_id = hb@cID)
hexbin_stats <- shots %>%
mutate(hexbin_id = hb@cID) %>%
group_by(hexbin_id) %>%
summarize(
hex_attempts = n(),
hex_pct = mean(shot_made_numeric),
hex_points_scored = sum(shot_made_numeric * shot_value),
hex_points_per_shot = mean(shot_made_numeric * shot_value)
)
hexbin_ids_to_zones <- shots %>%
group_by(hexbin_id, shot_zone_range, shot_zone_area) %>%
summarize(attempts = n()) %>%
ungroup() %>%
arrange(hexbin_id, desc(attempts)) %>%
group_by(hexbin_id) %>%
filter(row_number() == 1) %>%
select(hexbin_id, shot_zone_range, shot_zone_area)
hexbin_stats <- inner_join(hexbin_stats, hexbin_ids_to_zones, by = "hexbin_id")
# from hexbin package, see: https://github.com/edzer/hexbin
sx <- hb@xbins / diff(hb@xbnds)
sy <- (hb@xbins * hb@shape) / diff(hb@ybnds)
dx <- 1 / (2 * sx)
dy <- 1 / (2 * sqrt(3) * sy)
origin_coords <- hexcoords(dx, dy)
hex_centers <- hcell2xy(hb)
hexbin_coords <- bind_rows(lapply(1:hb@ncells, function(i) {
data.frame(
x = origin_coords$x + hex_centers$x[i],
y = origin_coords$y + hex_centers$y[i],
center_x = hex_centers$x[i],
center_y = hex_centers$y[i],
hexbin_id = hb@cell[i]
)
}))
hex_data <- inner_join(hexbin_coords, hexbin_stats, by = "hexbin_id")
grouped_shots <- shots %>%
group_by(shot_zone_range, shot_zone_area)
zone_stats <- grouped_shots %>%
summarize(
zone_attempts = n(),
zone_pct = mean(shot_made_numeric),
zone_points_scored = sum(shot_made_numeric * shot_value),
zone_points_per_shot = mean(shot_made_numeric * shot_value),
team_name
)
league_zone_stats <- league_averages %>%
group_by(shot_zone_range, shot_zone_area) %>%
summarize(league_pct = sum(fgm) / sum(fga))
join_keys <- c("shot_zone_area", "shot_zone_range")
hex_data <- hex_data %>%
inner_join(zone_stats, by = join_keys) %>%
inner_join(league_zone_stats, by = join_keys)
max_hex_attempts <- max(hex_data$hex_attempts)
hex_data <- hex_data %>%
mutate(radius_factor = 0.25 + (1 - 0.25) * log(hex_attempts + 1) / log(max_hex_attempts + 1),
adj_x = center_x + radius_factor * (x - center_x),
adj_y = center_y + radius_factor * (y - center_y),
bounded_fg_diff = pmin(pmax(zone_pct - league_pct, -0.15), 0.15),
bounded_fg_pct = pmin(pmax(zone_pct, 0.2), 0.7),
bounded_points_per_shot = pmin(pmax(zone_points_per_shot, 0.5), 1.5)
)
names(shots) <- sub(".*\\.", "", names(shots))
names(league_averages) <- sub(".*\\.", "", names(league_averages))
df <- hex_data
names(df) <- sub(".*\\.", "", names(df))
p <- plot_court(court_themes$light) +
geom_polygon(
data = df,
aes(
x = adj_x,
y = adj_y,
group = hexbin_id,
fill = bounded_fg_diff,
color = after_scale(clr_darken(fill, .333))),
size = .25) +
scale_x_continuous(limits = c(-27.5, 27.5)) +
scale_y_continuous(limits = c(0, 45)) +
scale_fill_distiller(direction = -1,
palette = "RdBu",
limits = c(-.15, .15),
breaks = seq(-.15, .15, .03),
labels = c("-15%", "-12%", "-9%", "-6%", "-3%", "0%", "+3%", "+6%", "+9%", "+12%", "+15%"),
"FG Percentage Points vs. League Average") +
guides(fill=guide_legend(
label.position = 'bottom',
title.position = 'top',
keywidth=.45,
keyheight=.15,
default.unit="inch",
title.hjust = .5,
title.vjust = 0,
label.vjust = 3,
nrow = 1))  +
theme(text=element_text(size=14,  family="Gill Sans MT"),
legend.spacing.x = unit(0, 'cm'),
legend.title=element_text(size=12),
legend.text = element_text(size = rel(0.6)),
legend.margin=margin(-10,0,-1,0),
legend.position = 'bottom',
legend.box.margin=margin(-30,0,15,0),
plot.title = element_text(size = 18, hjust = 0.5, vjust = -1, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = -.5),
plot.caption = element_text(face = "italic", size = 8),
plot.margin = margin(1, -5, 1, -5, "cm")) +
labs(title = player,
subtitle = "2022-23 Regular Season")
ggdraw(p) +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
}
shot_heatmap_player <- function(player) {
shots_heatmap <- shots_heatmap %>%
filter(player_name == player) %>%
filter(shot_zone_basic != "Restricted Area")
hm <- generate_heatmap_chart(shots_heatmap, plot_court(court_themes$dark))
p <- ggdraw(hm) +
theme(plot.background = element_rect(fill="black", color = NA))
title <- ggdraw() +
draw_label(player, fontface='bold', size = 18, color = "white", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="black", color = NA))
subtitle <- ggdraw() +
draw_label("2022-23 Regular Season", size = 14, color = "white", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="black", color = NA))
plot_grid(title, subtitle, p, ncol = 1, rel_heights = c(0.1, 0.1, 1))
}
shot_scatter_player <- function(player) {
shots_heatmap <- shots_heatmap %>%
filter(player_name == player)
hm <- generate_scatter_chart(shots_heatmap, plot_court(court_themes$light))
p <- ggdraw(hm) +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
title <- ggdraw() +
draw_label(player, fontface='bold', size = 18, color = "black", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
subtitle <- ggdraw() +
draw_label("2022-23 Regular Season", size = 14, color = "black", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
plot_grid(title, subtitle, p, ncol = 1, rel_heights = c(0.1, 0.1, 1))
}
### Run functions for season ----
shot_chart_player("Luka Doncic")
shot_heatmap_player("Luka Doncic")
shot_scatter_player("Luka Doncic")
# Season shot chart function teams   ------------------------------------------
shot_chart_team <- function(team) {
shots <- shots %>%
filter(team_name == team)
# Convert shot location data to binned-hexagon data  ----------------------
xbnds <- c(plyr::round_any(min(shots$loc_x), 1.5, floor) - 1e-6,
plyr::round_any(max(shots$loc_x), 1.5, ceiling) + 1e-6)
xbins <- diff(xbnds) / 1.5
ybnds <- c(plyr::round_any(min(shots$loc_y), 1.5, floor) - 1e-6,
plyr::round_any(max(shots$loc_y), 1.5, ceiling) + 1e-6)
ybins <- diff(ybnds) / 1.5
hb <- hexbin(
x = shots$loc_x,
y = shots$loc_y,
xbins = xbins,
xbnds = xbnds,
ybnds = ybnds,
shape = ybins / xbins,
IDs = TRUE
)
shots <- shots %>% mutate(hexbin_id = hb@cID)
hexbin_stats <- shots %>%
mutate(hexbin_id = hb@cID) %>%
group_by(hexbin_id) %>%
summarize(
hex_attempts = n(),
hex_pct = mean(shot_made_numeric),
hex_points_scored = sum(shot_made_numeric * shot_value),
hex_points_per_shot = mean(shot_made_numeric * shot_value)
)
hexbin_ids_to_zones <- shots %>%
group_by(hexbin_id, shot_zone_range, shot_zone_area) %>%
summarize(attempts = n()) %>%
ungroup() %>%
arrange(hexbin_id, desc(attempts)) %>%
group_by(hexbin_id) %>%
filter(row_number() == 1) %>%
select(hexbin_id, shot_zone_range, shot_zone_area)
hexbin_stats <- inner_join(hexbin_stats, hexbin_ids_to_zones, by = "hexbin_id")
# from hexbin package, see: https://github.com/edzer/hexbin
sx <- hb@xbins / diff(hb@xbnds)
sy <- (hb@xbins * hb@shape) / diff(hb@ybnds)
dx <- 1 / (2 * sx)
dy <- 1 / (2 * sqrt(3) * sy)
origin_coords <- hexcoords(dx, dy)
hex_centers <- hcell2xy(hb)
hexbin_coords <- bind_rows(lapply(1:hb@ncells, function(i) {
data.frame(
x = origin_coords$x + hex_centers$x[i],
y = origin_coords$y + hex_centers$y[i],
center_x = hex_centers$x[i],
center_y = hex_centers$y[i],
hexbin_id = hb@cell[i]
)
}))
hex_data <- inner_join(hexbin_coords, hexbin_stats, by = "hexbin_id")
grouped_shots <- shots %>%
group_by(shot_zone_range, shot_zone_area)
zone_stats <- grouped_shots %>%
summarize(
zone_attempts = n(),
zone_pct = mean(shot_made_numeric),
zone_points_scored = sum(shot_made_numeric * shot_value),
zone_points_per_shot = mean(shot_made_numeric * shot_value),
team_name
)
league_zone_stats <- league_averages %>%
group_by(shot_zone_range, shot_zone_area) %>%
summarize(league_pct = sum(fgm) / sum(fga))
join_keys <- c("shot_zone_area", "shot_zone_range")
hex_data <- hex_data %>%
inner_join(zone_stats, by = join_keys) %>%
inner_join(league_zone_stats, by = join_keys)
max_hex_attempts <- max(hex_data$hex_attempts)
hex_data <- hex_data %>%
mutate(radius_factor = 0.25 + (1 - 0.25) * log(hex_attempts + 1) / log(max_hex_attempts + 1),
adj_x = center_x + radius_factor * (x - center_x),
adj_y = center_y + radius_factor * (y - center_y),
bounded_fg_diff = pmin(pmax(zone_pct - league_pct, -0.15), 0.15),
bounded_fg_pct = pmin(pmax(zone_pct, 0.2), 0.7),
bounded_points_per_shot = pmin(pmax(zone_points_per_shot, 0.5), 1.5)
)
names(shots) <- sub(".*\\.", "", names(shots))
names(league_averages) <- sub(".*\\.", "", names(league_averages))
df <- hex_data
names(df) <- sub(".*\\.", "", names(df))
p <- plot_court(court_themes$light) +
geom_polygon(
data = df,
aes(
x = adj_x,
y = adj_y,
group = hexbin_id,
fill = bounded_fg_diff,
color = after_scale(clr_darken(fill, .333))),
size = .25) +
scale_x_continuous(limits = c(-27.5, 27.5)) +
scale_y_continuous(limits = c(0, 45)) +
scale_fill_distiller(direction = -1,
palette = "RdBu",
limits = c(-.15, .15),
breaks = seq(-.15, .15, .03),
labels = c("-15%", "-12%", "-9%", "-6%", "-3%", "0%", "+3%", "+6%", "+9%", "+12%", "+15%"),
"FG Percentage Points vs. League Average") +
guides(fill=guide_legend(
label.position = 'bottom',
title.position = 'top',
keywidth=.45,
keyheight=.15,
default.unit="inch",
title.hjust = .5,
title.vjust = 0,
label.vjust = 3,
nrow = 1))  +
theme(text=element_text(size=14,  family="Gill Sans MT"),
legend.spacing.x = unit(0, 'cm'),
legend.title=element_text(size=12),
legend.text = element_text(size = rel(0.6)),
legend.margin=margin(-10,0,-1,0),
legend.position = 'bottom',
legend.box.margin=margin(-30,0,15,0),
plot.title = element_text(size = 18, hjust = 0.5, vjust = -1, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = -.5),
plot.caption = element_text(face = "italic", size = 8),
plot.margin = margin(1, -5, 1, -5, "cm")) +
labs(title = team,
subtitle = "2022-23 Regular Season")
ggdraw(p) +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
}
shot_heatmap_team <- function(team) {
shots_heatmap <- shots_heatmap %>%
filter(team_name == team) %>%
filter(shot_zone_basic != "Restricted Area")
hm <- generate_heatmap_chart(shots_heatmap, plot_court(court_themes$dark))
p <- ggdraw(hm) +
theme(plot.background = element_rect(fill="black", color = NA))
title <- ggdraw() +
draw_label(team, fontface='bold', size = 18, color = "white", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="black", color = NA))
subtitle <- ggdraw() +
draw_label("2022-23 Regular Season", size = 14, color = "white", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="black", color = NA))
plot_grid(title, subtitle, p, ncol = 1, rel_heights = c(0.1, 0.1, 1))
}
shot_scatter_team <- function(team) {
shots_heatmap <- shots_heatmap %>%
filter(team_name == team)
hm <- generate_scatter_chart(shots_heatmap, plot_court(court_themes$light))
p <- ggdraw(hm) +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
title <- ggdraw() +
draw_label(team, fontface='bold', size = 18, color = "black", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
subtitle <- ggdraw() +
draw_label("2022-23 Regular Season", size = 14, color = "black", fontfamily = "Gill Sans MT") +
theme(plot.background = element_rect(fill="floralwhite", color = NA))
plot_grid(title, subtitle, p, ncol = 1, rel_heights = c(0.1, 0.1, 1))
}
### Run functions for game ----
shot_chart_player_gm("Luka Doncic","0022200512")
shot_chart_team("Dallas Mavericks")
shot_heatmap_team("Dallas Mavericks")
shot_scatter_team("Dallas Mavericks")
View(sched)
library(tidyverse)
library(nflfastR)
pbp <- nflfastR::load_pbp(2022)
pbp <- pbp %>% filter(week < 18)
overall <- calculate_player_stats(pbp, weekly = FALSE)
overall_new <- overall %>%
filter(position %in% c("QB","RB","WR","TE")) %>%
mutate(fantasy_points_new =
case_when(
position == "QB" ~ (passing_yards*0.04 + passing_tds*4 + rushing_yards*0.1 + rushing_tds*6),
position == "RB" ~ (rushing_yards*0.1 + rushing_tds*6 + receptions +
receiving_yards*0.1 + receiving_tds*6),
position == "WR" ~ (receptions + receiving_yards*0.1 + receiving_tds*6 +
rushing_yards*0.1 + rushing_tds*6),
position == "TE" ~ (receptions + receiving_yards*0.1 + receiving_tds*6 +
rushing_yards*0.1 + rushing_tds*6)
),
fantasy_ppg = fantasy_points_new/games
) %>%
arrange(desc(fantasy_ppg))
qb <- overall_new %>% filter(position == "QB")
rb <- overall_new %>% filter(position == "RB")
wr <- overall_new %>% filter(position == "WR")
te <- overall_new %>% filter(position == "TE")
View(qb)
source("~/Documents/MyStuff/NBA Betting/MAMBA-NBA/OddsR.R", echo=TRUE)
source("~/Documents/MyStuff/NBA Betting/MAMBA-NBA/Results_Edges.R", echo=TRUE)
source("~/Documents/MyStuff/NBA Betting/MAMBA-NBA/Stat_CleanR.R", echo=TRUE)
source("~/Documents/MyStuff/NBA Betting/MAMBA-NBA/Models.R", echo=TRUE)
source("~/Documents/MyStuff/NBA Betting/MAMBA-NBA/Plays.R", echo=TRUE)
